# Base image
FROM ubuntu:20.04

# Define build-time arguments
ARG MAIN_DIR=project

# Install dependencies as root
USER root
RUN apt-get update && \
    apt-get install -y curl wget gnupg sudo python3 python3-pip openssl 

# Install code-server
RUN curl -fsSL https://code-server.dev/install.sh | sh

# Create a non-root user
RUN useradd -ms /bin/bash user1

# Use the ARG variable to create necessary directories and set permissions
RUN mkdir -p  /home/$MAIN_DIR /certs && \
    chown -R user1:user1 /home /certs && \
    chmod -R 755 /home /certs

# Add the non-root user to sudoers
RUN echo "user1 ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers

# Expose the ports on which code-server will run
EXPOSE 8080
EXPOSE 8443
EXPOSE 5050

# Set environment variables to redirect cache, config, and local directories
# ENV XDG_CACHE_HOME=/home/application_data/cache
# ENV XDG_CONFIG_HOME=/home/application_data/config
# ENV XDG_DATA_HOME=/home/application_data/local

# Set the working directory
WORKDIR /home

# Switch back to root to generate SSL certificate
USER root
RUN openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout /certs/code-server.key -out /certs/code-server.crt -subj "/CN=localhost" && \
    chmod 600 /certs/code-server.key /certs/code-server.crt && \
    chown user1:user1 /certs/code-server.key /certs/code-server.crt

# Switch to non-root user
USER user1

# Start code-server with HTTPS and password authentication
CMD ["sh", "-c", "code-server --bind-addr 0.0.0.0:8443 --cert /certs/code-server.crt --cert-key /certs/code-server.key --auth password --disable-telemetry --user-data-dir /home"]

# docker run -d  --memory='512m'  --memory-swap='1g'  --cpus='1.0'  --storage-opt size=1G   -p 8080:8080  -p 8443:8443  -p 5050:5050  -e PASSWORD=yourpassword  -v v_user1:/home  secure-vscode-server:latest
